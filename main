import requests
import time
import logging

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
TOKEN = "8009237790:AAEBZUeXJpHVGMU8-OR7bj763a36xdBl3kg"
CHAT_ID = "700156145"
CHANGE_THRESHOLD = 15.0
CHECK_INTERVAL = 60  # –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö

# === –õ–æ–≥–∏ ===
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def send_message(text):
    url = f"https://api.telegram.org/bot{TOKEN}/sendMessage"
    try:
        requests.get(url, params={"chat_id": CHAT_ID, "text": text})
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

def get_futures_prices():
    url = 'https://contract.mexc.com/api/v1/contract/ticker'
    try:
        response = requests.get(url)
        data = response.json().get('data', [])
        prices = {}
        for item in data:
            prices[item['symbol']] = {
                'lastPrice': float(item['lastPrice']),
                'volume24': float(item['volume24'])
            }
        return prices
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ—å—é—á–µ—Ä—Å–Ω—ã—Ö —Ü–µ–Ω: {e}")
        return {}

def main():
    logging.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –≤—Å–µ –º–æ–Ω–µ—Ç—ã –Ω–∞ —Ñ—å—é—á–µ—Ä—Å–∞—Ö MEXC.")
    send_message("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Ä–µ–∑–∫–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω –∏ –æ–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤ –∑–∞ 24—á.")

    last_prices = get_futures_prices()
    if not last_prices:
        logging.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ.")
        return

    while True:
        time.sleep(CHECK_INTERVAL)
        current_prices = get_futures_prices()
        if not current_prices:
            continue

        for symbol, info in current_prices.items():
            if symbol not in last_prices or last_prices[symbol]['lastPrice'] == 0:
                last_prices[symbol] = info
                continue

            change_percent = ((info['lastPrice'] - last_prices[symbol]['lastPrice']) / last_prices[symbol]['lastPrice']) * 100

            if abs(change_percent) >= CHANGE_THRESHOLD:
                if change_percent > 0:
                    message = (
                        f"üöÄ –ü–ê–ú–ü –Ω–∞ {symbol}!\n"
                        f"–†–æ—Å—Ç: +{change_percent:.2f}%\n"
                        f"–¶–µ–Ω–∞: {info['lastPrice']}\n"
                        f"–û–±—ä–µ–º –∑–∞ 24—á: {info['volume24']}"
                    )
                else:
                    message = (
                        f"üìâ –î–ê–ú–ü –Ω–∞ {symbol}!\n"
                        f"–ü–∞–¥–µ–Ω–∏–µ: {change_percent:.2f}%\n"
                        f"–¶–µ–Ω–∞: {info['lastPrice']}\n"
                        f"–û–±—ä–µ–º –∑–∞ 24—á: {info['volume24']}"
                    )

                send_message(message)
                logging.info(message)
                last_prices[symbol] = info

if __name__ == "__main__":
    main()
